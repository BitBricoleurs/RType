cmake_minimum_required(VERSION 3.15)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

project(RTYPE LANGUAGES CXX)

include(GNUInstallDirs)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Debug CACHE STRING "Choose the type of build (Debug or Release)" FORCE)
endif()

set(PROJECT_NAME_POCSERVER r-type_server)
set(PROJECT_NAME_POCCLIENT r-type_client)
set(LIBRARY_NAME_NETLIB NetworkLib)
set(PROJECT_NAME_POCCinematic POCCinematic)
set(PROJECT_NAME_HUNTER Hunter)
set(LIBRARY_NAME_GAMEENGINE GameEngine)
set(LIBRARY_NAME_UTILS Utils)
set(LIBRARY_NAME_AUDIO AudioEngineLib)
set(LIBRARY_NAME_RENDER RenderEngineLib)
set(LIBRARY_NAME_PHYSICS PhysicsEngineLib)
set(PROJECT_NAME_CONSOLE Console)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)


add_library(${LIBRARY_NAME_GAMEENGINE} STATIC)
add_library(${LIBRARY_NAME_NETLIB} STATIC)
if(NOT WIN32)
    add_library(${LIBRARY_NAME_AUDIO} STATIC)
endif ()
add_library(${LIBRARY_NAME_UTILS} STATIC)
add_library(${LIBRARY_NAME_RENDER} STATIC)
add_library(${LIBRARY_NAME_PHYSICS} STATIC)

add_executable(${PROJECT_NAME_POCSERVER})
add_executable(${PROJECT_NAME_POCCLIENT})
add_executable(${PROJECT_NAME_POCCinematic})
add_executable(${PROJECT_NAME_HUNTER})
add_executable(${PROJECT_NAME_CONSOLE})

add_subdirectory(lib)
add_subdirectory(src)

if (WIN32)
    file(COPY ${CMAKE_SOURCE_DIR}/assets DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    file(COPY ${CMAKE_SOURCE_DIR}/config DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})

endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin)

file(COPY ${CMAKE_SOURCE_DIR}/assets DESTINATION .)
file(COPY ${CMAKE_SOURCE_DIR}/config DESTINATION .)

message(STATUS "Configured to compile the RType project.")

install(TARGETS ${PROJECT_NAME_CLIENT} ${PROJECT_NAME_SERVER} ${PROJECT_NAME_POCENGINE} ${PROJECT_NAME_POCSERVER} ${PROJECT_NAME_POCCLIENT} ${PROJECT_NAME_HUNTER} ${PROJECT_NAME_MAP_CREATOR}

        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
)


install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/assets" DESTINATION ${CMAKE_INSTALL_BINDIR})
install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/config" DESTINATION ${CMAKE_INSTALL_BINDIR})

include(InstallRequiredSystemLibraries)


message(STATUS "CPACK_PACKAGE_VERSION: ${CPACK_PACKAGE_VERSION}")

set(CPACK_PACKAGE_NAME "RTYPE")
set(CPACK_PACKAGE_VENDOR "T-H-C-A")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "RTYPE - Oui")
if(NOT DEFINED CPACK_PACKAGE_VERSION)
    set(CPACK_PACKAGE_VERSION "1.0.0")
endif()
set(CPACK_PACKAGE_INSTALL_DIRECTORY "RTYPE")
set(CPACK_PACKAGE_CONTACT "alexandre@email.com")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "${CPACK_PACKAGE_CONTACT}")

if(WIN32)
    set(CPACK_GENERATOR "NSIS")
elseif(APPLE)
    set(CPACK_GENERATOR "DragNDrop")
else()
    set(CPACK_GENERATOR "DEB;RPM")
endif()

include(CPack)
