name: Checks

on: [push, pull_request]

jobs:
  check_repository_cleanliness:
    name: Check Repository Cleanliness
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: check good files & folders
        run: |
          paths=($(find . \
              -name '#*#' \
              -o -name '*-' \
              -o -name '*.tmp' \
              -o -name '*.o' \
              -o -name '*.a' \
              -o -name '*.so' \
              -o -name '*.gcno' \
              -o -name '*.gcda' \
              -o -name '*.gcov' \
              -o -name 'CMakeCache.txt' \
              -o -name '*.cmake' \
              -o -type d -name 'CMakeFiles' \
              -o -name '*.log' \
              -o -type d -name 'tmp' \
              -o -type d -name 'vcpkg' \))

          if [[ ${#paths[@]} -ne 0 ]]; then
            IFS=$'\n'
            for FILE in "${paths[@]}"; do echo "::error title=Unwanted file detected,file=$FILE::$FILE"; done
            unset IFS
            exit 1
          fi

  check_norm:
    name: Check with clang-tidy and clang-format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install clang-tidy and clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy clang-format

      - name: Run clang-tidy
        run: |
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON .
          find . -name '*.cpp' -or -name '*.h' | xargs clang-tidy -p

      - name: Check clang-format
        run: |
          find . -name '*.cpp' -or -name '*.h' | xargs clang-format -i --style=file
          git diff --exit-code

  check_program_compilation_linux:
    name: Check Program Compilation (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Compile Program
        run: |
          cmake .
          make

  # check_program_compilation_macos:
  #   name: Check Program Compilation (macOS)
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install dependencies
  #       run: |
  #         brew install cmake
  #     - name: Compile Program
  #       run: |
  #         cmake -DCMAKE_CXX_STANDARD=20 .
  #         make
  # check_program_compilation_windows:
  #   name: Check Program Compilation (Windows)
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install dependencies
  #       run: |
  #         choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
  #     - name: Setup MSBuild
  #       uses: microsoft/setup-msbuild@v1.0.2
  #     - name: Compile Program
  #       run: |
  #         cmake -DCMAKE_CXX_STANDARD=20 .
  #         cmake --build .
