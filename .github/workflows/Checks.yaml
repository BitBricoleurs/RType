name: Checks

on: [push, pull_request]

jobs:
  check_repository_cleanliness:
    name: Check Repository Cleanliness
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: check unwanted files & folders
        run: |
          declare -a patterns=(
            '#*#'
            '*-'
            '*.tmp'
            '*.o'
            '*.a'
            '*.so'
            '*.gcno'
            '*.gcda'
            '*.gcov'
            'CMakeCache.txt'
            '*.cmake'
            'CMakeFiles'
            '*.log'
            'tmp'
            'vcpkg'
          )

          found=0
          for pattern in "${patterns[@]}"; do
            if [[ -d "$pattern" || -f "$pattern" ]]; then
              find . -name "$pattern" | while read -r FILE; do
                echo "::error title=Unwanted file detected,file=$FILE::$FILE"
                found=1
              done
            fi
          done

          if [[ $found -eq 1 ]]; then
            exit 1
          fi

  # check_norm:
  #   name: Check with clang-tidy and clang-format
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install clang-tidy and clang-format
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y clang-tidy clang-format
  #     - name: Run clang-tidy
  #       run: |
  #         cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON .
  #         find . -name '*.cpp' -or -name '*.h' | xargs clang-tidy -p

  #     - name: Check clang-format
  #       run: |
  #         find . -name '*.cpp' -or -name '*.h' | xargs clang-format -i --style=file
  #         git diff --exit-code

  check_program_compilation_linux:
    name: Check Program Compilation (Linux)
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v3
      - name: Compile Program
        run: |
            tree
      - name: Compile Program
        run: |
          ./build.sh

  check_program_compilation_macos:
    name: Check Program Compilation (macOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          brew install cmake
      - name: Compile Program
        run: |
          ./build.sh

  check_program_compilation_windows:
    name: Check Program Compilation (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Compile Program
        run: |
          ./build.ps1
